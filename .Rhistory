alpha = 0.7) +
geom_density(kernel = "epanechnikov",
alpha = 0.1,
bw = h/2,
linetype = "solid") +
#geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
#           linetype="dashed")+
scale_color_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
scale_fill_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
labs(title="Weight histogram plot",
x = "Weight(kg)",
y = "Density")+
theme_classic()
delta <- 1.7188 # Ver CT
w.sd <- sd(panel_hitter$WAR)
w.iqr.adj <- IQR(panel_hitter$WAR)/1.349
w.N <- nrow(panel_hitter)
constante <- 1.3643
ajuste <- min(w.sd,w.iqr.adj)
h <- constante*delta*ajuste*w.N^(-0.2) # ancho de banda
# Change line colors by groups
ggplot(panel_hitter, aes(x = WAR,
color = Agente_libre,
fill = Agente_libre)) +
geom_histogram(aes(y = ..density..) ,
bins = 20,
position = "identity",
alpha = 0.7) +
geom_density(kernel = "epanechnikov",
alpha = 0.1,
bw = h/2,
linetype = "solid") +
#geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
#           linetype="dashed")+
scale_color_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
scale_fill_manual(values = c("#000000",
"#E69F00",
"#56B4E9"))+
labs(title="Weight histogram plot",
x = "Weight(kg)",
y = "Density")+
theme_classic()
delta <- 1.7188 # Ver CT
w.sd <- sd(panel_hitter$Porcentaje_slugging)
w.iqr.adj <- IQR(panel_hitter$Porcentaje_slugging)/1.349
w.N <- nrow(panel_hitter)
constante <- 1.3643
ajuste <- min(w.sd,w.iqr.adj)
h <- constante*delta*ajuste*w.N^(-0.2) # ancho de banda
# Change line colors by groups
ggplot(panel_hitter, aes(x = Porcentaje_slugging,
color = Agente_libre,
fill = Agente_libre)) +
geom_histogram(aes(y = ..density..) ,
bins = 20,
position = "identity",
alpha = 0.7) +
geom_density(kernel = "epanechnikov",
alpha = 0.1,
bw = h/2,
linetype = "solid") +
#geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
#           linetype="dashed")+
scale_color_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
scale_fill_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
labs(title="Weight histogram plot",
x = "Weight(kg)",
y = "Density")+
theme_classic()
delta <- 1.7188 # Ver CT
w.sd <- sd(panel_hitter$Porcentaje_slugging)
w.iqr.adj <- IQR(panel_hitter$Porcentaje_slugging)/1.349
w.N <- nrow(panel_hitter)
constante <- 1.3643
ajuste <- min(w.sd,w.iqr.adj)
h <- constante*delta*ajuste*w.N^(-0.2) # ancho de banda
# Change line colors by groups
ggplot(panel_hitter, aes(x = Porcentaje_slugging,
color = Agente_libre,
fill = Agente_libre)) +
geom_histogram(aes(y = ..density..) ,
bins = 10,
position = "identity",
alpha = 0.7) +
geom_density(kernel = "epanechnikov",
alpha = 0.1,
bw = h/2,
linetype = "solid") +
#geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
#           linetype="dashed")+
scale_color_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
scale_fill_manual(values = c("#999999",
"#E69F00",
"#56B4E9"))+
labs(title="Weight histogram plot",
x = "Weight(kg)",
y = "Density")+
theme_classic()
v <- ggplot(data=panel_hitter , aes(x=WAR))
v + geom_histogram(binwidth=10 , aes(fill=Agente_libre) ,
color="Black")
# Facetas:
v + geom_histogram(binwidth=10 , aes(fill=Agente_libre) ,
color="Black") +
facet_grid(Agente_libre~.)
v + geom_histogram(binwidth=10 , aes(fill=Agente_libre) ,
color="Black") +
facet_grid(Agente_libre~. , scale="free")
knitr::opts_chunk$set(echo = TRUE)
library(lmtest) # for robust standard errors
library(dplyr) # for group_by function
library(ggplot2) # for better plots
library(dplyr) # for data managment
library(lubridate)
library(plm)
library(tidyr)
setwd("~/Documentos/Github/Proyectos/MLB_HN/")
hitters_panel <- read.csv('ETL_Data/Panel/Cumulative/Dynamic_model/panel_hitters.csv')
fielders_panel <- read.csv('ETL_Data/Panel/Cumulative/Dynamic_model/panel_fielders.csv')
print("Bateadores: ")
print(dim(hitters_panel))
print("")
print("Fildeadores: ")
print(dim(fielders_panel))
print("Bateadores:")
print(unique(hitters_panel$Posicion))
print("")
print("Fildeadores:")
print(unique(fielders_panel$Posicion))
fielders_panel %>% count(Posicion, sort = TRUE)
hitters_panel %>% count(Posicion, sort = TRUE)
# split the data frame by category
split_hitter <- split(hitters_panel, f = hitters_panel$Posicion)
split_fielder <- split(fielders_panel, f = fielders_panel$Posicion)
# Offensive:
h_category_1 <- split_hitter[["SP"]]
h_category_2 <- split_hitter[["RP"]]
h_category_3 <- split_hitter[["RP/CL"]]
h_category_4 <- split_hitter[["C"]]
h_category_5 <- split_hitter[["1B"]]
h_category_6 <- split_hitter[["2B"]]
h_category_7 <- split_hitter[["3B"]]
h_category_8 <- split_hitter[["SS"]]
h_category_9 <- split_hitter[["RF"]]
h_category_10 <- split_hitter[["CF"]]
h_category_11 <- split_hitter[["LF"]]
d_hitter_data <- split_hitter[["DH"]]
# Defensive:
b_category_1 <- split_fielder[["SP"]]
b_category_2 <- split_fielder[["RP"]]
b_category_3 <- split_fielder[["RP/CL"]]
b_category_4 <- split_fielder[["C"]]
if_category_1 <- split_fielder[["1B"]]
if_category_2 <- split_fielder[["2B"]]
if_category_3 <- split_fielder[["3B"]]
if_category_4 <- split_fielder[["SS"]]
of_category_1 <- split_fielder[["RF"]]
of_category_2 <- split_fielder[["CF"]]
of_category_3 <- split_fielder[["LF"]]
# Hitters:
# Concatenate the two categories
hitter_data <- rbind(h_category_1, h_category_2, h_category_3, h_category_4,
h_category_5, h_category_6, h_category_7, h_category_8,
h_category_9, h_category_10, h_category_11)
# Fielders:
# Concatenate the two categories
battery_data <- rbind(b_category_1, b_category_2, b_category_3, b_category_4)
# Infield:
# Concatenate the two categories
infield_data <- rbind(if_category_1, if_category_2, if_category_3, if_category_4)
# Outfield:
# Concatenate the two categories
outfield_data <- rbind(of_category_1, of_category_2, of_category_3)
print("Regular hitter: ")
print(dim(hitter_data))
print("")
print("Designated hitter: ")
print(dim(d_hitter_data))
print("")
print("Battery: ")
print(dim(battery_data))
print("")
print("Infield: ")
print(dim(infield_data))
print("Regular hitter: ")
print(dim(outfield_data))
# select variables x and y
# Bateadores:
hitter_subset <- subset(mydata, select = c("X_At_bats", "X_At_bats_2"))
setwd("~/Documentos/Github/Proyectos/MLB_HN/")
hitters_panel <- read.csv('ETL_Data/Panel/Cumulative/Dynamic_model/panel_hitters.csv')
fielders_panel <- read.csv('ETL_Data/Panel/Cumulative/Dynamic_model/panel_fielders.csv')
print("Bateadores: ")
print(dim(hitters_panel))
print("")
print("Fildeadores: ")
print(dim(fielders_panel))
library(lmtest) # for robust standard errors
library(dplyr) # for group_by function
library(ggplot2) # for better plots
library(dplyr) # for data managment
library(lubridate)
library(plm)
library(tidyr)
hitters_panel %>% count(Posicion, sort = TRUE)
fielders_panel %>% count(Posicion, sort = TRUE)
# split the data frame by category
split_hitter <- split(hitters_panel, f = hitters_panel$Posicion)
split_fielder <- split(fielders_panel, f = fielders_panel$Posicion)
# Offensive:
h_category_1 <- split_hitter[["SP"]]
h_category_2 <- split_hitter[["RP"]]
h_category_3 <- split_hitter[["RP/CL"]]
h_category_4 <- split_hitter[["C"]]
h_category_5 <- split_hitter[["1B"]]
h_category_6 <- split_hitter[["2B"]]
h_category_7 <- split_hitter[["3B"]]
h_category_8 <- split_hitter[["SS"]]
h_category_9 <- split_hitter[["RF"]]
h_category_10 <- split_hitter[["CF"]]
h_category_11 <- split_hitter[["LF"]]
d_hitter_data <- split_hitter[["DH"]]
# Defensive:
b_category_1 <- split_fielder[["SP"]]
b_category_2 <- split_fielder[["RP"]]
b_category_3 <- split_fielder[["RP/CL"]]
b_category_4 <- split_fielder[["C"]]
if_category_1 <- split_fielder[["1B"]]
if_category_2 <- split_fielder[["2B"]]
if_category_3 <- split_fielder[["3B"]]
if_category_4 <- split_fielder[["SS"]]
of_category_1 <- split_fielder[["RF"]]
of_category_2 <- split_fielder[["CF"]]
of_category_3 <- split_fielder[["LF"]]
# Hitters:
# Concatenate the two categories
hitter_data <- rbind(h_category_1, h_category_2, h_category_3, h_category_4,
h_category_5, h_category_6, h_category_7, h_category_8,
h_category_9, h_category_10, h_category_11)
# Fielders:
# Concatenate the two categories
battery_data <- rbind(b_category_1, b_category_2, b_category_3, b_category_4)
# Infield:
# Concatenate the two categories
infield_data <- rbind(if_category_1, if_category_2, if_category_3, if_category_4)
# Outfield:
# Concatenate the two categories
outfield_data <- rbind(of_category_1, of_category_2, of_category_3)
print("Regular hitter: ")
print(dim(hitter_data))
print("")
print("Designated hitter: ")
print(dim(d_hitter_data))
print("")
print("Battery: ")
print(dim(battery_data))
print("")
print("Infield: ")
print(dim(infield_data))
print("Regular hitter: ")
print(dim(outfield_data))
# select variables x and y
# Bateadores:
hitter_subset <- subset(mydata, select = c("X_At_bats", "X_At_bats_2"))
# select variables x and y
# Bateadores:
hitter_subset <- subset(hitters_panel,
select = c("X_At_bats",
"X_At_bats_2"))
# extract the column names and convert to a list
# Bateadores:
var_hitter_list <- as.list(names(hitter_subset))
# FIldeaddores:
var_fielder_list <- as.list(names(fielders_panel))
# print the list
print(var_hitter_list)
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)) {
# run linear regression with grouped errors by country and robust errors
formula <- paste("ln_Sueldo_regular ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
}
# create a list to store the results
results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)) {
# run linear regression with grouped errors by country and robust errors
formula <- paste("ln_Sueldo_regular ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("ln_Sueldo_regular ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("ln_Sueldo_regular ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# select variables x and y
# Bateadores:
hitter_subset <- subset(hitters_panel,
select = c("X_At_bats", "X_At_bats_2",
"X_Bateos", "X_Bateos_2",
"X_Bateos_promedio", "X_Bateos_promedio_2",
"X_Dobles", "X_Dobles_2",
"X_Home_runs", "X_Home_runs_2",
"X_Juegos_iniciados", "X_Juegos_iniciados_2",
"X_Porcentaje_On_base_plus_slugging", "X_Porcentaje_On_base_plus_slugging_2",
"X_Porcentaje_on_base", "X_Porcentaje_on_base_2",
"X_Porcentaje_slugging", "X_Porcentaje_slugging_2",
"X_Runs_batted_in", "X_Runs_batted_in_2",
"X_Triples", "X_Triples_2",
"X_WAR", "X_WAR_2"))
# extract the column names and convert to a list
# Bateadores:
var_hitter_list <- as.list(names(hitter_subset))
# FIldeaddores:
var_fielder_list <- as.list(names(fielders_panel))
# print the list
print(var_hitter_list)
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + ", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + ", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Anios_contrato", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Anios_de_contrato_x", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Anios_de_contrato_x", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Anios_de_contrato", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Anios_de_contrato_x + ", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Anio + Edad + Altura + Peso + ", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
# create a list to store the results
hitter_results <- list()
# loop over the variables in var_hitter_list
for (i in 1:length(var_hitter_list)){
# run linear regression with grouped errors by country and robust errors
formula <- paste("Y ~ Edad + ", var_hitter_list[[i]])
model <- lm(formula, data = hitters_panel)
model_robust <- coeftest(model, vcov = vcovHC(model, type = "HC1"))
# store the results in the list
hitter_results[[i]] <- list(variable = names(var_hitter_list[i]),
model = model_robust)
# show the results
print(hitter_results[[i]])
}
